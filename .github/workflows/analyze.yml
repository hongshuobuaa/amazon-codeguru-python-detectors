name: Analyze with CodeGuru Reviewer

on: 
 - push
 - workflow_dispatch # This allows manual triggering of the action through the GitHub UI.

permissions:
    id-token: write
    contents: read

jobs:
  analyze:
    name: Analyze with CodeGuru Reviewer
    runs-on: ubuntu-latest
    steps:
    - name: Configure AWS credentials
      id: iam-role
      continue-on-error: true
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: arn:aws:iam::706158628778:role/GitHubActionRole
        aws-region: us-east-2
    
    - uses: actions/checkout@v2
      if: steps.iam-role.outcome == 'success'
      with:
        fetch-depth: 0

    - name: CodeGuru Reviewer
      uses: aws-actions/codeguru-reviewer@v1.1
      if: steps.iam-role.outcome == 'success'
      continue-on-error: true
      with:          
        s3_bucket: codeguru-reviewer-build-artifacts-706158628778-us-east-2
        
    - name: Store SARIF file
      if: steps.iam-role.outcome == 'success'
      uses: actions/upload-artifact@v2
      with:
        name: SARIF_recommendations
        path: ./codeguru-results.sarif.json

    - name: Save a summary of the results to a file on local disk
      if: steps.assume-iam-role.outcome == 'success' && steps.analysis.outcome == 'success'
      run: |
        echo "detector,filePath,lineNumber" > summary-of-results.csv
        jq -r '.runs[0].results[] | {ruleId: .ruleId, firstFile: .locations[0].physicalLocation.artifactLocation.uri, firstLine: .locations[0].physicalLocation.region.startLine} | join(",")' \
          codeguru-results.sarif.json | sort >> summary-of-results.csv

    - name: Upload results summary to workflow artifacts
      if: steps.assume-iam-role.outcome == 'success' && steps.analysis.outcome == 'success'
      uses: actions/upload-artifact@v2
      with:
        name: summary-of-results.csv
        path: summary-of-results.csv

    - name: Print CSV summary of analysis results to the action log
      if: steps.assume-iam-role.outcome == 'success' && steps.analysis.outcome == 'success'
      run: cat summary-of-results.csv
